name: Build CI Wheels

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
            ubuntu-latest,
            macOS-latest,
            windows-latest
        ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels for CPython
        uses: pypa/cibuildwheel@v2.11.1
        with:
          output-dir: dist
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-*"
          CIBW_SKIP: "*-musllinux_*"  #  numpy doesn't have wheels for musllinux so we can't build some quickly and without bloating
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "auto"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_ENVIRONMENT: "LDFLAGS='-static-libstdc++'"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_BUILD: "rm -rf build/"  # working around .so files accumulation between builds leading up to bloated wheels

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: tarball
          path: dist/*.tar.gz
